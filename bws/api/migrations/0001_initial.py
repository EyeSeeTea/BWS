# Generated by Django 4.1 on 2022-08-30 16:04

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
                ("email", models.EmailField(blank=True, default="", max_length=255)),
                ("address", models.CharField(blank=True, default="", max_length=255)),
                ("orcid", models.CharField(blank=True, default="", max_length=25)),
                ("role", models.CharField(blank=True, default="", max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="EmdbEntry",
            fields=[
                (
                    "dbId",
                    models.CharField(
                        default="",
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="dbID doesnt comply", regex="^EMD-[0-9]{4,5}$"
                            )
                        ],
                    ),
                ),
                ("title", models.CharField(default="", max_length=255)),
                (
                    "emMethod",
                    models.CharField(
                        choices=[
                            ("Single Particle", "Single Particle"),
                            ("Shelical", "Shelical"),
                            ("Electron Crystallography", "Electron Crystallography"),
                            ("tomography", "tomography"),
                            ("subtomogram averaging", "subtomogram averaging"),
                        ],
                        default="Single Particle",
                        max_length=25,
                    ),
                ),
                ("resolution", models.CharField(blank=True, max_length=10, null=True)),
                ("status", models.CharField(default="Unreleased", max_length=5)),
                ("details", models.CharField(max_length=200)),
                ("created", models.DateField(auto_now_add=True)),
                ("modified", models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Entry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("entryId", models.CharField(blank=True, default="", max_length=10)),
                ("path", models.CharField(blank=True, default="", max_length=255)),
                ("entryType", models.CharField(blank=True, default="", max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name="FeatureEntity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
                ("description", models.TextField(blank=True, default="")),
                ("externalLink", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="FeatureType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
                ("description", models.CharField(default="", max_length=255)),
                ("dataSource", models.CharField(default="", max_length=255)),
                ("externalLink", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="HybridModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "emdbId",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hybridmodels",
                        to="api.emdbentry",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LigandEntity",
            fields=[
                (
                    "dbId",
                    models.CharField(
                        default="", max_length=20, primary_key=True, serialize=False
                    ),
                ),
                ("ligandType", models.CharField(blank=True, max_length=25)),
                ("name", models.CharField(max_length=200)),
                ("formula", models.CharField(max_length=200)),
                ("formula_weight", models.FloatField()),
                ("details", models.CharField(max_length=200)),
                ("altNames", models.CharField(max_length=200)),
                ("imageLink", models.CharField(max_length=200)),
                ("externalLink", models.CharField(max_length=200)),
                (
                    "pubChemCompoundId",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "systematicNames",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("IUPACInChI", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "IUPACInChIkey",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "isomericSMILES",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "canonicalSMILES",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ModelEntity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=25)),
                ("src_method", models.CharField(max_length=200)),
                ("name", models.CharField(max_length=200)),
                ("mutation", models.CharField(max_length=200)),
                ("details", models.CharField(max_length=200)),
                ("altNames", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Organism",
            fields=[
                (
                    "ncbi_taxonomy_id",
                    models.CharField(
                        default="", max_length=10, primary_key=True, serialize=False
                    ),
                ),
                ("scientific_name", models.CharField(max_length=200)),
                ("common_name", models.CharField(blank=True, max_length=200)),
                ("externalLink", models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="PdbEntry",
            fields=[
                (
                    "dbId",
                    models.CharField(
                        default="",
                        max_length=4,
                        primary_key=True,
                        serialize=False,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="dbID doesnt comply",
                                regex="^[0-9][a-zA-Z_0-9]{3}$",
                            )
                        ],
                    ),
                ),
                ("title", models.CharField(default="", max_length=255)),
                ("status", models.CharField(default="", max_length=25)),
                ("relDate", models.DateField(blank=True, null=True)),
                ("method", models.CharField(blank=True, max_length=255, null=True)),
                ("keywords", models.CharField(blank=True, max_length=255, null=True)),
                ("created", models.DateField(auto_now_add=True)),
                ("modified", models.DateField(auto_now=True)),
                ("dbauthors", models.ManyToManyField(to="api.author")),
            ],
        ),
        migrations.CreateModel(
            name="PlateEntity",
            fields=[
                (
                    "dbId",
                    models.CharField(
                        default="", max_length=50, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Publication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(default="", max_length=255)),
                (
                    "journal_abbrev",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                ("issn", models.CharField(blank=True, default="", max_length=255)),
                ("issue", models.CharField(blank=True, default="", max_length=255)),
                ("volume", models.CharField(blank=True, default="", max_length=255)),
                (
                    "page_first",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                ("page_last", models.CharField(blank=True, default="", max_length=255)),
                ("year", models.CharField(blank=True, default="", max_length=255)),
                ("doi", models.CharField(default="", max_length=255)),
                ("pubMedId", models.CharField(default="", max_length=255)),
                ("PMCId", models.CharField(default="", max_length=255)),
                ("abstract", models.TextField(blank=True, default="", max_length=255)),
                ("authors", models.ManyToManyField(to="api.author")),
            ],
        ),
        migrations.CreateModel(
            name="RefinedModelSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("description", models.TextField()),
                ("externalLink", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="SampleEntity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
                ("exprSystem", models.CharField(default="", max_length=255)),
                ("assembly", models.CharField(default="", max_length=255)),
                ("ass_method", models.CharField(default="", max_length=255)),
                ("ass_details", models.CharField(default="", max_length=255)),
                ("macromolecules", models.CharField(default="", max_length=255)),
                ("uniProts", models.CharField(default="", max_length=255)),
                ("genes", models.CharField(default="", max_length=255)),
                ("bioFunction", models.CharField(default="", max_length=255)),
                ("bioProcess", models.CharField(default="", max_length=255)),
                ("cellComponent", models.CharField(default="", max_length=255)),
                ("domains", models.CharField(default="", max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="ScreenEntity",
            fields=[
                (
                    "dbId",
                    models.CharField(
                        default="", max_length=50, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
                (
                    "description",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                ("type", models.CharField(default="", max_length=255)),
                (
                    "typeTermAccession",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                ("technologyType", models.CharField(default="", max_length=255)),
                (
                    "technologyTypeTermAccession",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "imagingMethod",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                (
                    "imagingMethodTermAccession",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "sampleType",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                ("plateCount", models.IntegerField(blank=True, default=0, null=True)),
                ("dataDoi", models.CharField(blank=True, default="", max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
                ("description", models.CharField(default="", max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="UniProtEntry",
            fields=[
                (
                    "dbId",
                    models.CharField(
                        default="", max_length=20, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("externalLink", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="AssayEntity",
            fields=[
                (
                    "featureentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        to="api.featureentity",
                    ),
                ),
                ("details", models.CharField(blank=True, default="", max_length=255)),
                (
                    "dbId",
                    models.CharField(
                        default="", max_length=50, primary_key=True, serialize=False
                    ),
                ),
                ("assayType", models.CharField(blank=True, default="", max_length=255)),
                (
                    "assayTypeTermAccession",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                ("screenCount", models.IntegerField(blank=True, default=0, null=True)),
                ("BIAId", models.CharField(blank=True, default="", max_length=255)),
                (
                    "releaseDate",
                    models.DateField(blank=True, default="", max_length=255, null=True),
                ),
                ("dataDoi", models.CharField(blank=True, default="", max_length=255)),
                ("organisms", models.ManyToManyField(to="api.organism")),
                ("publications", models.ManyToManyField(to="api.publication")),
            ],
            options={
                "abstract": False,
            },
            bases=("api.featureentity",),
        ),
        migrations.CreateModel(
            name="FeatureRegionEntity",
            fields=[
                (
                    "featureentity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="api.featureentity",
                    ),
                ),
                ("start", models.IntegerField()),
                ("end", models.IntegerField()),
            ],
            bases=("api.featureentity",),
        ),
        migrations.CreateModel(
            name="WellEntity",
            fields=[
                (
                    "dbId",
                    models.CharField(
                        default="", max_length=50, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
                ("externalLink", models.URLField(blank=True)),
                ("imageThumbailLink", models.URLField(blank=True)),
                ("imagesIds", models.CharField(blank=True, default="", max_length=255)),
                ("cellLine", models.CharField(blank=True, default="", max_length=255)),
                (
                    "cellLineTermAccession",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                (
                    "controlType",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                (
                    "qualityControl",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                (
                    "micromolarConcentration",
                    models.FloatField(blank=True, default="", null=True),
                ),
                (
                    "percentageInhibition",
                    models.FloatField(blank=True, default="", null=True),
                ),
                (
                    "hitOver75Activity",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                ("numberCells", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "phenotypeAnnotationLevel",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                ("channels", models.CharField(blank=True, default="", max_length=255)),
                (
                    "ligand",
                    models.ForeignKey(
                        blank=True,
                        default="",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="well",
                        to="api.ligandentity",
                    ),
                ),
                (
                    "plate",
                    models.ForeignKey(
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wells",
                        to="api.plateentity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StructureTopic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "structure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="topics",
                        to="api.hybridmodel",
                    ),
                ),
                (
                    "topic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="structures",
                        to="api.topic",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SampleModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("PDB-Redo", "PDB-Redo"),
                            ("Isolde", "Isolde"),
                            ("RefMac", "RefMac"),
                            ("Cerex", "Cerex"),
                        ],
                        default="PDB-Redo",
                        max_length=25,
                    ),
                ),
                (
                    "emdbId",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="samples",
                        to="api.emdbentry",
                    ),
                ),
                (
                    "pdbId",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="samples",
                        to="api.pdbentry",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RefinedModelMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("description", models.TextField()),
                (
                    "source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.refinedmodelsource",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RefinedModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("filename", models.CharField(max_length=200)),
                ("externalLink", models.CharField(max_length=200)),
                ("queryLink", models.CharField(max_length=200)),
                ("details", models.TextField()),
                (
                    "emdbId",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="refMaps",
                        to="api.emdbentry",
                    ),
                ),
                (
                    "method",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.refinedmodelmethod",
                    ),
                ),
                (
                    "pdbId",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="refModels",
                        to="api.pdbentry",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.refinedmodelsource",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PublicationAuthor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ordinal", models.IntegerField()),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pubauthors",
                        to="api.author",
                    ),
                ),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pubauthors",
                        to="api.publication",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="plateentity",
            name="screen",
            field=models.ForeignKey(
                default="",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="plates",
                to="api.screenentity",
            ),
        ),
        migrations.CreateModel(
            name="PdbToLigand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField()),
                (
                    "ligand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pdbligands",
                        to="api.ligandentity",
                    ),
                ),
                (
                    "pdbId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pdbligands",
                        to="api.pdbentry",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PdbToEntity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField()),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pdbentities",
                        to="api.modelentity",
                    ),
                ),
                (
                    "pdbId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pdbentities",
                        to="api.pdbentry",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PdbEntryDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pdbentry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="details",
                        to="api.pdbentry",
                    ),
                ),
                ("refdoc", models.ManyToManyField(to="api.publication")),
                (
                    "sample",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="details",
                        to="api.sampleentity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PdbEntryAuthor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ordinal", models.IntegerField()),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pdbmodels",
                        to="api.author",
                    ),
                ),
                (
                    "pdbId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pdbauthors",
                        to="api.pdbentry",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="pdbentry",
            name="entities",
            field=models.ManyToManyField(
                through="api.PdbToEntity", to="api.modelentity"
            ),
        ),
        migrations.AddField(
            model_name="pdbentry",
            name="ligands",
            field=models.ManyToManyField(
                through="api.PdbToLigand", to="api.ligandentity"
            ),
        ),
        migrations.AddField(
            model_name="modelentity",
            name="organism",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="modelEntities",
                to="api.organism",
            ),
        ),
        migrations.AddField(
            model_name="modelentity",
            name="uniprotAcc",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="modelEntities",
                to="api.uniprotentry",
            ),
        ),
        migrations.AddField(
            model_name="hybridmodel",
            name="pdbId",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="hybridmodels",
                to="api.pdbentry",
            ),
        ),
        migrations.AddField(
            model_name="featureentity",
            name="featureType",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_features",
                to="api.featuretype",
            ),
        ),
        migrations.AddField(
            model_name="featureentity",
            name="pdbentry",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="features",
                to="api.pdbentry",
            ),
        ),
        migrations.AddField(
            model_name="emdbentry",
            name="pdbIds",
            field=models.ManyToManyField(through="api.HybridModel", to="api.pdbentry"),
        ),
        migrations.CreateModel(
            name="DataFile",
            fields=[
                (
                    "unique_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("filename", models.CharField(blank=True, default="", max_length=50)),
                ("path", models.CharField(blank=True, default="", max_length=255)),
                ("fileType", models.CharField(blank=True, default="", max_length=12)),
                ("method", models.CharField(blank=True, default="", max_length=12)),
                (
                    "entry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="api.entry",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="screenentity",
            name="assay",
            field=models.ForeignKey(
                default="",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="screens",
                to="api.assayentity",
            ),
        ),
    ]
