# Generated by Django 3.2.9 on 2022-05-14 22:42

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('orcid', models.CharField(default='', max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='EmdbEntry',
            fields=[
                ('dbId', models.CharField(default='', max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='dbID doesnt comply', regex='^EMD-[0-9]{4,5}$')])),
                ('title', models.CharField(default='', max_length=255)),
                ('emMethod', models.CharField(choices=[('Single Particle', 'Single Particle'), ('Shelical', 'Shelical'), ('Electron Crystallography', 'Electron Crystallography'), ('tomography', 'tomography'), ('subtomogram averaging', 'subtomogram averaging')], default='Single Particle', max_length=25)),
                ('resolution', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.CharField(default='Unreleased', max_length=5)),
                ('details', models.CharField(max_length=200)),
                ('created', models.DateField(auto_now_add=True)),
                ('modified', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('entryId', models.CharField(blank=True, default='', max_length=10)),
                ('path', models.CharField(blank=True, default='', max_length=255)),
                ('entryType', models.CharField(blank=True, default='', max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('description', models.CharField(default='', max_length=255)),
                ('dataSource', models.CharField(default='', max_length=255)),
                ('externalLink', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='IDRWellEntity',
            fields=[
                ('dbId', models.CharField(default='', max_length=20, primary_key=True, serialize=False)),
                ('image_externalLink', models.URLField()),
                ('images_ids', models.CharField(default='', max_length=255)),
                ('cell_line', models.CharField(default='', max_length=255)),
                ('quality_control', models.CharField(default='', max_length=255)),
                ('percentage_inhibition', models.CharField(default='', max_length=255)),
                ('hit_over_75_activity', models.CharField(default='', max_length=255)),
                ('number_cells', models.CharField(default='', max_length=255)),
                ('phenotype_annotation_level', models.CharField(default='', max_length=255)),
                ('channels', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='LigandEntity',
            fields=[
                ('dbId', models.CharField(default='', max_length=20, primary_key=True, serialize=False)),
                ('ligandType', models.CharField(max_length=25)),
                ('name', models.CharField(max_length=200)),
                ('formula', models.CharField(max_length=200)),
                ('formula_weight', models.FloatField()),
                ('details', models.CharField(max_length=200)),
                ('altNames', models.CharField(max_length=200)),
                ('imageLink', models.CharField(max_length=200)),
                ('externalLink', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ModelEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=25)),
                ('src_method', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('mutation', models.CharField(max_length=200)),
                ('details', models.CharField(max_length=200)),
                ('altNames', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Organism',
            fields=[
                ('ncbi_taxonomy_id', models.CharField(default='', max_length=10, primary_key=True, serialize=False)),
                ('scientific_name', models.CharField(max_length=200)),
                ('common_name', models.CharField(max_length=200)),
                ('externalLink', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PdbEntry',
            fields=[
                ('dbId', models.CharField(default='', max_length=4, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='dbID doesnt comply', regex='^[0-9][a-zA-Z_0-9]{3}$')])),
                ('title', models.CharField(default='', max_length=255)),
                ('status', models.CharField(default='', max_length=25)),
                ('relDate', models.DateField(blank=True, null=True)),
                ('method', models.CharField(blank=True, max_length=255, null=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('modified', models.DateField(auto_now=True)),
                ('dbauthors', models.ManyToManyField(to='api.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255)),
                ('journal_abbrev', models.CharField(default='', max_length=255)),
                ('issn', models.CharField(default='', max_length=255)),
                ('issue', models.CharField(default='', max_length=255)),
                ('volume', models.CharField(default='', max_length=255)),
                ('page_first', models.CharField(default='', max_length=255)),
                ('page_last', models.CharField(default='', max_length=255)),
                ('year', models.CharField(default='', max_length=255)),
                ('doi', models.CharField(default='', max_length=255)),
                ('pubMedId', models.CharField(default='', max_length=255)),
                ('abstract', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SampleEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('exprSystem', models.CharField(default='', max_length=255)),
                ('assembly', models.CharField(default='', max_length=255)),
                ('ass_method', models.CharField(default='', max_length=255)),
                ('ass_details', models.CharField(default='', max_length=255)),
                ('macromolecules', models.CharField(default='', max_length=255)),
                ('uniProts', models.CharField(default='', max_length=255)),
                ('genes', models.CharField(default='', max_length=255)),
                ('bioFunction', models.CharField(default='', max_length=255)),
                ('bioProcess', models.CharField(default='', max_length=255)),
                ('cellComponent', models.CharField(default='', max_length=255)),
                ('domains', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UniProtEntry',
            fields=[
                ('dbId', models.CharField(default='', max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('externalLink', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='SampleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('PDB-Redo', 'PDB-Redo'), ('Isolde', 'Isolde'), ('RefMac', 'RefMac'), ('Cerex', 'Cerex')], default='PDB-Redo', max_length=25)),
                ('emdbId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='api.emdbentry')),
                ('pdbId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='api.pdbentry')),
            ],
        ),
        migrations.CreateModel(
            name='RefinedPdbRedoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('PDB-Redo', 'PDB-Redo'), ('Isolde', 'Isolde'), ('RefMac', 'RefMac'), ('Cerex', 'Cerex')], default='PDB-Redo', max_length=25)),
                ('emdbId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refinedpdbredomodel_refMaps', to='api.emdbentry')),
                ('pdbId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refinedpdbredomodel_refModels', to='api.pdbentry')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RefinedIsoldeRedoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('PDB-Redo', 'PDB-Redo'), ('Isolde', 'Isolde'), ('RefMac', 'RefMac'), ('Cerex', 'Cerex')], default='PDB-Redo', max_length=25)),
                ('filename', models.CharField(default='', max_length=255)),
                ('emdbId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refinedisolderedomodel_refMaps', to='api.emdbentry')),
                ('pdbId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refinedisolderedomodel_refModels', to='api.pdbentry')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublicationAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordinal', models.IntegerField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pubauthors', to='api.author')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pubauthors', to='api.publication')),
            ],
        ),
        migrations.AddField(
            model_name='publication',
            name='authors',
            field=models.ManyToManyField(through='api.PublicationAuthor', to='api.Author'),
        ),
        migrations.CreateModel(
            name='PdbToLigand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('ligand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdbligands', to='api.ligandentity')),
                ('pdbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdbligands', to='api.pdbentry')),
            ],
        ),
        migrations.CreateModel(
            name='PdbToEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdbentities', to='api.modelentity')),
                ('pdbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdbentities', to='api.pdbentry')),
            ],
        ),
        migrations.CreateModel(
            name='PdbEntryDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdbentry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='api.pdbentry')),
                ('refdoc', models.ManyToManyField(to='api.Publication')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='api.sampleentity')),
            ],
        ),
        migrations.CreateModel(
            name='PdbEntryAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordinal', models.IntegerField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdbmodels', to='api.author')),
                ('pdbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdbauthors', to='api.pdbentry')),
            ],
        ),
        migrations.AddField(
            model_name='pdbentry',
            name='entities',
            field=models.ManyToManyField(through='api.PdbToEntity', to='api.ModelEntity'),
        ),
        migrations.AddField(
            model_name='pdbentry',
            name='ligands',
            field=models.ManyToManyField(through='api.PdbToLigand', to='api.LigandEntity'),
        ),
        migrations.AddField(
            model_name='modelentity',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modelEntities', to='api.organism'),
        ),
        migrations.AddField(
            model_name='modelentity',
            name='uniprotAcc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modelEntities', to='api.uniprotentry'),
        ),
        migrations.CreateModel(
            name='HybridModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emdbId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hybridmodels', to='api.emdbentry')),
                ('pdbId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hybridmodels', to='api.pdbentry')),
            ],
        ),
        migrations.CreateModel(
            name='FeatureRegionEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('description', models.CharField(default='', max_length=255)),
                ('externalLink', models.CharField(default='', max_length=200)),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('featureType', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='featureregionentity_features', to='api.featuretype')),
                ('pdbentry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='featureregionentity_features', to='api.pdbentry')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureHCSModelEntity',
            fields=[
                ('name', models.CharField(default='', max_length=255)),
                ('description', models.CharField(default='', max_length=255)),
                ('externalLink', models.CharField(default='', max_length=200)),
                ('details', models.CharField(default='', max_length=255)),
                ('dbId', models.CharField(default='', max_length=20, primary_key=True, serialize=False)),
                ('ligand_name', models.CharField(default='', max_length=255)),
                ('iupac_name', models.CharField(default='', max_length=255)),
                ('inchikey', models.CharField(default='', max_length=255)),
                ('smiles', models.CharField(default='', max_length=255)),
                ('broad_id', models.CharField(default='', max_length=255)),
                ('pubchem_cid', models.CharField(default='', max_length=255)),
                ('pubchem_url', models.URLField()),
                ('unichem_url', models.URLField()),
                ('screen_id', models.CharField(default='', max_length=255)),
                ('plate_id', models.CharField(default='', max_length=255)),
                ('featureType', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='featurehcsmodelentity_features', to='api.featuretype')),
                ('organism', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='highContentScreenings', to='api.organism')),
                ('pdbentry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='featurehcsmodelentity_features', to='api.pdbentry')),
                ('well_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='highContentScreenings', to='api.idrwellentity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='emdbentry',
            name='pdbIds',
            field=models.ManyToManyField(through='api.HybridModel', to='api.PdbEntry'),
        ),
        migrations.CreateModel(
            name='DataFile',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filename', models.CharField(blank=True, default='', max_length=50)),
                ('path', models.CharField(blank=True, default='', max_length=255)),
                ('fileType', models.CharField(blank=True, default='', max_length=12)),
                ('method', models.CharField(blank=True, default='', max_length=12)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='api.entry')),
            ],
        ),
    ]
