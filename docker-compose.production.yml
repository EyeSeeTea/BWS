#
# PRODUCTION ONLY SETTINGS
#
name: bws-prod

services:
  # App container
  web:
    image: ${IMAGE_NAME}
    environment:
      - DJANGO_SETTINGS_MODULE=bws.settings.production
      - APP_NAME=${APP_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER_NAME=${DB_USER_NAME}
      - DB_USER_PASSWD=${DB_USER_PASSWD}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
    #ports:
    #  - "${APP_EXT_PORT}:8000"
    volumes:
      - ${PATH_DATA}:/data
      - ${PATH_TOOLS}:/tools:ro
    networks:
      - app-network
    deploy:
      restart_policy:
        condition: always
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    labels:
        - "csic.cnb.bcu.app.environment=${ENVIRONMENT}"
        - "csic.cnb.bcu.project.name=${PROJECT_NAME}"
        - "csic.cnb.bcu.app.name=${APP_NAME}"
        - "csic.cnb.bcu.app.description=3DBionotes-WS API"
        - "csic.cnb.bcu.app.maintainer=jr.macias@cnb.csic.es"

  nginx:
    image: nginx:alpine
    environment:
      - SERVER_NAME=$SERVER_NAME
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 80:80
    networks:
      - app-network
    restart: on-failure
    depends_on:
      - web

  pma:
    image: phpmyadmin/phpmyadmin:4.9
    environment:
      PMA_HOST: ${DB_HOST}
      PMA_PORT: ${DB_PORT}
      PMA_ARBITRARY: 1
    restart: on-failure
    ports:
      - "${PMA_EXT_PORT}:80"
    networks:
      - app-network
    depends_on:
            db:
                condition: service_healthy

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER_NAME}
      MYSQL_PASSWORD: ${DB_USER_PASSWD}
    volumes:
      - dbdata:/var/lib/mysql
      #- ./appdb.sql:/docker-entrypoint-initdb.d/appdb.sql
    expose:
      - "3306"
    networks:
      - app-network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 10

  # Elasticsearch container
  elasticsearch:
    image: elasticsearch:${ES_IMAGE_VERSION}
    env_file:
      - .env-prod
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data/
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
    mem_limit: ${ES_MEM_LIMIT}
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  dbdata: null
  es_data:

networks:
  app-network:
    driver: bridge
    name: ${NETWORK_NAME}